/*
条件（三元）运算符是 JavaScript 仅有的使用三个操作数的运算符。
一个条件后面会跟一个问号（?），如果条件为 truthy ，则问号后面的表达式A将会执行；表达式A后面跟着一个冒号（:），
如果条件为 falsy ，则冒号后面的表达式B将会执行。本运算符经常作为 if 语句的简捷形式来使用。（MDN）
三元运算符，也称条件运算符、三目运算符。
三元运算符可以代替简单的 if 语句。
 */
// 语法：条件 ? 条件为真时执行的表达式 : 条件为假时执行的表达式
var a = 23;
var b = a > 18 ? "成年人" : "未成年人";
console.log(b);
console.log("=====================利用三元运算符判断年龄是否成年获取对应的文案=====================")
var age1 = 19;
var str1 = age1 > 18 ? '成年了' : '没有成年';
console.log(str1); // 输出："成年了"
console.log("==============================================================================");
// if 的写法2
var age2 = 19;
var str2 = '';
if (age2 > 18) {
    str2 = '成年了';
} else {
    str2 = '没有成年';
}
console.log(str2);
console.log("==============================================================================");
// if 的写法2
var age3 = 19;
var str3 = '没有成年';
if (age3 > 18) {
    str3 = '成年了';
}
console.log(str3);
/*
使用三元运算符可以代替简单的 if 语句，让代码更简洁，减少分支。
其中条件为假的情况除了 false ，有以下几种：
null
undefined
NaN
0(数字0)
空字符串
这些值有在 Boolean 中提到过，他们都可以被隐式转换为 false。
 */
console.log("==========================尽量不要嵌套,嵌套的三元运算符会让可读性变差=============================");
var hasFruit = true;
var hasPeach = false;
var buy = hasFruit ? hasPeach ? '买桃子' : '买西瓜' : '没有卖水果的';

console.log(buy);
// 这样会让逻辑变得混乱，可读性变差。
// 这种情况应使用 if 代替。
console.log("==========================使用if代替=============================");
var hasFruit1 = true;
var hasPeach1 = false;
var buy1 = '';
if (hasFruit1) {
    if (hasPeach1) {
        buy1 = '买桃子';
    } else {
        buy1 = '买西瓜';
    }
    // 或者这里使用三元运算符
    // buy = hasPeach ? '买桃子' : '买西瓜';
} else {
    buy1 = '没有卖水果的';
}
console.log(buy1);
// 换成 if 可以让逻辑更清晰。
// 有时候不能为了让代码看起来变少而牺牲代码可读性，代码可读性是非常重要的。
// 三元运算符可以代替简单的 if 语句，但尽量不要嵌套使用，这样会降低代码的可读性。